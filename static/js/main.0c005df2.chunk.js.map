{"version":3,"sources":["actions/types.js","reducers/blogReducer.js","reducers/index.js","store.js","actions/blogActions.js","components/BlogItem.js","components/Blogs.js","components/BlogDetails.js","components/App.js","index.js"],"names":["FETCH_BLOGS","SET_DISPLAY_ITEM_COUNT","SET_SORT_BY_FIELD","SET_FILTER","SET_LIKES","initialState","allItems","items","filterByAuthor","filterByCategory","sortBy","sortOrder","itemsToDisplay","combineReducers","blogs","state","action","type","payload","sorterItems","sort","a","b","localeCompare","filteredItems","field","filterText","filter","item","toLowerCase","includes","map","id","likes","middleware","thunk","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","persistor","persistStore","fetchBlogs","dispatch","fetch","then","res","json","setDisplayItemCount","count","DATE_FORMAT","BlogItem","props","Row","className","onClick","handleClick","Col","xs","Card","Body","Text","as","format","published_date","category","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","Title","title","Subtitle","description","author","Image","src","imgs","thumb","rounded","fluid","PAGE_SIZE","getSortByText","Blogs","loadMoreArticles","setSortBy","fieldOrder","handleFilterByChange","event","setState","target","name","value","setFilterBy","handleBlogClick","history","push","this","length","blogItems","i","Container","Navbar","expand","Brand","Collapse","Form","inline","FormControl","placeholder","onChange","Nav","NavDropdown","Item","ButtonToolbar","Button","variant","Component","mapDispatchToProps","connect","BlogDetails","handleLikeClick","currItem","setLikes","similarItems","to","style","backgroundImage","large","sm","padding","ownProps","find","Number","match","params","App","loading","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c005df2.chunk.js","sourcesContent":["const FETCH_BLOGS = 'FETCH_BLOGS';\nconst SET_DISPLAY_ITEM_COUNT = 'SET_DISPLAY_ITEM_COUNT';\nconst SET_SORT_BY_FIELD = 'SET_SORT_BY_FIELD';\nconst SET_FILTER = 'SET_FILTER';\nconst SET_LIKES = 'SET_LIKES';\n\nexport { FETCH_BLOGS, SET_DISPLAY_ITEM_COUNT, SET_SORT_BY_FIELD, SET_FILTER, SET_LIKES };","import { FETCH_BLOGS, SET_DISPLAY_ITEM_COUNT, SET_SORT_BY_FIELD, SET_FILTER, SET_LIKES } from '../actions/types';\n\nconst initialState = {\n  allItems: [],\n  items: [],\n  filterByAuthor: '',\n  filterByCategory: '',\n  sortBy: '',\n  sortOrder: '',\n  itemsToDisplay: 0\n}\n\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case FETCH_BLOGS:\n      return {\n        ...state,\n        items: [...action.payload],\n        allItems: [...action.payload]\n      }\n    case SET_DISPLAY_ITEM_COUNT:\n      return {\n        ...state,\n        itemsToDisplay: action.payload\n      }\n    case SET_SORT_BY_FIELD:\n      const sorterItems = [...state.items];\n      if (action.payload.sortBy) {\n        sorterItems.sort((a, b) => {\n          if (action.payload.sortBy === 'published_date') {\n            if (action.payload.sortOrder === 'asc') {\n              return a[action.payload.sortBy] - b[action.payload.sortBy];\n            } else {\n              return b[action.payload.sortBy] - a[action.payload.sortBy];\n            }\n          } else {\n            if (action.payload.sortOrder === 'asc') {\n              return a[action.payload.sortBy].localeCompare(b[action.payload.sortBy]);\n            } else {\n              return b[action.payload.sortBy].localeCompare(a[action.payload.sortBy]);\n            }\n          }\n        });\n      }\n      return {\n        ...state,\n        items: sorterItems,\n        sortBy: action.payload.sortBy,\n        sortOrder: action.payload.sortOrder\n      }\n    case SET_FILTER:\n      let filteredItems = [...state.allItems];\n      let {filterByAuthor, filterByCategory} = state; \n      if (action.payload.field === 'author') {\n        filterByAuthor = action.payload.filterText;\n        filteredItems = filteredItems.filter((item) => {\n          return item[action.payload.field].toLowerCase().includes(action.payload.filterText.toLowerCase());\n        });\n      } else if (action.payload.field === 'category') {\n        filterByCategory = action.payload.filterText;\n        filteredItems = filteredItems.filter((item) => {\n          return item[action.payload.field].toLowerCase().includes(action.payload.filterText.toLowerCase());\n        });\n      }\n      return {\n        ...state,\n        items: filteredItems,\n        filterByAuthor,\n        filterByCategory,\n      }\n    case SET_LIKES:\n      const items = [...state.items].map(item => {\n        if (action.payload.id === item.id) {\n          item.likes = action.payload.likes;\n        }\n        return item;\n      });\n      const allItems = [...state.allItems].map(item => {\n        if (action.payload.id === item.id) {\n          item.likes = action.payload.likes;\n        }\n        return item;\n      });\n\n      return {\n        ...state,\n        items,\n        allItems\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport blogReducer from './blogReducer';\n\nexport default combineReducers({\n  blogs: blogReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(\n    persistedReducer, initialState,\n    applyMiddleware(...middleware)\n);\nconst persistor = persistStore(store);\nexport default { store, persistor };","import { FETCH_BLOGS, SET_DISPLAY_ITEM_COUNT, SET_SORT_BY_FIELD, SET_FILTER, SET_LIKES } from './types';\n\nfunction fetchBlogs() {\n  return (dispatch) => {\n    fetch('/blogs.json')\n      .then(res => res.json())\n      .then(blogs => dispatch({\n        type: FETCH_BLOGS,\n        payload: blogs\n      }));\n  }\n}\n\nfunction setDisplayItemCount(count) {\n  return {\n    type: SET_DISPLAY_ITEM_COUNT,\n    payload: count\n  }\n}\n\nfunction setSortBy(sortBy, sortOrder) {\n  return {\n    type: SET_SORT_BY_FIELD,\n    payload: {\n      sortBy, \n      sortOrder\n    }\n  }\n}\n\nfunction setFilterBy(field, filterText) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      field, \n      filterText\n    }    \n  }\n}\n\nfunction setLikes(id, likes) {\n  return {\n    type: SET_LIKES,\n    payload: {\n      id,\n      likes\n    }    \n  }\n}\n\nexport { fetchBlogs, setDisplayItemCount, setSortBy, setFilterBy, setLikes };","import React from 'react';\nimport Moment from 'react-moment';\nimport {\n  Row,\n  Col,\n  Card,\n  Image,\n} from 'react-bootstrap';\n\nexport const DATE_FORMAT = 'DD/MM/YYYY';\n\nfunction BlogItem(props) {\n  return (\n    <Row className=\"blog-item-container mb-4\" onClick={() => props.handleClick(props.item.id)}>\n      <Col xs={8}>\n        <Card>\n          <Card.Body>\n            <Card.Text as=\"div\" className=\"clearfix\">\n              <div className=\"float-left mr-2 font-italic\">\n                <Moment format={DATE_FORMAT}>{props.item.published_date}</Moment>\n              </div>\n              <div className=\"float-left font-weight-bold\">{props.item.category}</div>\n              <div className=\"float-right text-muted\">\n                <svg\n                  className=\"bi bi-heart-fill\"\n                  width=\"1.2em\"\n                  height=\"1.2em\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 3.314C14.438-1.248 25.534 6.735 10 17-5.534 6.736 5.562-1.248 10 3.314z\"\n                    clipRule=\"evenodd\"\n                  ></path>\n                </svg>\n                {props.item.likes}\n              </div>\n            </Card.Text>\n            <Card.Title>{props.item.title}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted text-truncate\">{props.item.description}</Card.Subtitle>\n            <Card.Text as=\"div\">\n              <div>\n                <span className=\"mr-1\">By</span>\n                <span className=\"font-italic font-weight-bold\">{props.item.author}</span>\n              </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col xs={4}>\n        <Image src={props.item.imgs.thumb} rounded fluid />\n      </Col>\n    </Row>\n  );\n}\n\nexport default (BlogItem);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  ButtonToolbar,\n  Button\n} from 'react-bootstrap';\n\nimport { fetchBlogs, setDisplayItemCount, setSortBy, setFilterBy } from '../actions/blogActions';\nimport BlogItem from './BlogItem';\n\nexport const PAGE_SIZE = 4;\n\nconst getSortByText = (sortBy) => {\n  switch (sortBy) {\n    case 'author':\n      return 'Author';\n    case 'category':\n      return 'Category';\n    case 'published_date':\n      return 'Published Date';\n    default:\n      return 'Sort By'\n  }\n}\n\nclass Blogs extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: props.filterByAuthor || '',\n      category: props.filterByCategory || ''\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.allItems || !this.props.allItems.length) {\n      this.props.setDisplayItemCount(PAGE_SIZE);\n      this.props.fetchBlogs();\n    }\n  }\n\n  loadMoreArticles = () => {\n    const { itemsToDisplay } = this.props;\n    this.props.setDisplayItemCount((itemsToDisplay + PAGE_SIZE));\n  }\n\n  sortBy = (field) => {\n    const { sortBy, sortOrder } = this.props;\n    const { setDisplayItemCount, setSortBy } = this.props;\n    setDisplayItemCount(PAGE_SIZE);\n    let fieldOrder = 'asc';\n    if (sortBy === field && sortOrder === 'asc') {\n      fieldOrder = 'desc';\n    }\n    setSortBy(field, fieldOrder);\n  }\n\n  handleFilterByChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    const { setDisplayItemCount, setFilterBy } = this.props;\n    setDisplayItemCount(PAGE_SIZE);\n    setFilterBy(event.target.name, event.target.value);\n  }\n\n  handleBlogClick = id => {\n    this.props.history.push(`/blog/${id}`);\n  }\n\n  render() {\n    const { blogs, itemsToDisplay, sortBy } = this.props;\n    const blogItems = [];\n    if (blogs && blogs.length > 0) {\n      for (var i = 0; i < blogs.length; i++) {\n        blogItems.push(<BlogItem key={`blog-${i}`} item={blogs[i]} handleClick={this.handleBlogClick}/>);\n        if ((i + 1) === itemsToDisplay) {\n          break;\n        }\n      }\n    }\n    return (\n      <Container>\n        <Navbar expand=\"lg\" className=\"blogs-title-container mb-5 mt-4\">\n          <Navbar.Brand>\n            <h2 className=\"blogs-title-text\">Blogs</h2>\n          </Navbar.Brand>\n          <Navbar.Collapse className=\"show\">\n            <Form inline className=\"ml-auto\">\n              <FormControl type=\"text\"\n                placeholder=\"Filter by Author\"\n                className=\"mr-sm-2\"\n                onChange={this.handleFilterByChange}\n                name='author'\n                value={this.state.author}\n              />\n              <FormControl type=\"text\"\n                placeholder=\"Filter by Category\"\n                className=\"mr-sm-2\"\n                onChange={this.handleFilterByChange} \n                name='category'\n                value={this.state.category}\n              />\n            </Form>\n            <Nav>\n              <NavDropdown title={getSortByText(sortBy)}>\n                <NavDropdown.Item onClick={() => this.sortBy('author')}>Author</NavDropdown.Item>\n                <NavDropdown.Item onClick={() => this.sortBy('category')}>Category</NavDropdown.Item>\n                <NavDropdown.Item onClick={() => this.sortBy('published_date')}>Published Date</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Row>\n          <Col>\n            {(blogs && blogs.length > 0) ? blogItems : 'No blog found.'}\n          </Col>\n        </Row>\n        <Row className=\"mb-3\">\n          <Col>\n            {(blogs && blogs.length > 0 && itemsToDisplay < blogs.length) ? (\n              <ButtonToolbar>\n                <Button\n                  variant=\"outline-secondary\"\n                  className=\"mx-auto d-block\"\n                  onClick={this.loadMoreArticles}\n                >\n                  More Articles\n                </Button>\n              </ButtonToolbar>\n            ) : null}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  allItems: state.blogs.allItems,\n  blogs: state.blogs.items,\n  itemsToDisplay: state.blogs.itemsToDisplay,\n  sortBy: state.blogs.sortBy,\n  sortOrder: state.blogs.sortOrder,\n  filterByAuthor: state.blogs.filterByAuthor,\n  filterByCategory: state.blogs.filterByCategory,\n});\n\nconst mapDispatchToProps = { fetchBlogs, setDisplayItemCount, setSortBy, setFilterBy };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blogs);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  ButtonToolbar,\n  Button\n} from 'react-bootstrap';\n\nimport { fetchBlogs, setDisplayItemCount, setLikes } from '../actions/blogActions';\nimport { PAGE_SIZE } from './Blogs';\nimport BlogItem, { DATE_FORMAT } from './BlogItem';\n\nclass BlogDetails extends Component {\n\n  componentDidMount() {\n    if (!this.props.allItems || !this.props.allItems.length) {\n      this.props.setDisplayItemCount(PAGE_SIZE);\n      this.props.fetchBlogs();\n    }\n  }\n\n  handleBlogClick = id => {\n    this.props.history.push(`/blog/${id}`);\n  }\n\n  handleLikeClick = () => {\n    const {id, likes} = this.props.currItem;\n    this.props.setLikes(id, (likes + 1));\n  }\n\n  render() {\n    const { currItem, similarItems } = this.props;\n    if (!currItem.id) {\n      return <Row>\n        <Col>\n          <div className=\"text-center mt-5\">\n            Article not found. Go to <Link to=\"/\">Home</Link>\n          </div>\n        </Col>\n      </Row>\n    }\n\n    const blogItems = [];\n    if (similarItems && similarItems.length > 0) {\n      for (var i = 0; i < similarItems.length; i++) {\n        blogItems.push(<BlogItem key={`blog-${i}`} item={similarItems[i]} handleClick={this.handleBlogClick} />);\n      }\n    }\n    return (\n      <div>\n        <div className=\"blog-item-image-container\" style={{ backgroundImage: `url(${currItem.imgs.large})` }}>\n          <Image src={currItem.imgs.large} fluid />\n        </div>\n        <Container>\n          <Row className=\"mt-3 mb-5\">\n            <Col xs={12} sm={9}>\n              <h4>{currItem.title}</h4>\n              <div className=\"clearfix\">\n                <div className=\"text-muted font-italic float-right\">Published on:  <Moment format={DATE_FORMAT}>{currItem.published_date}</Moment></div>\n              </div>\n              <hr />\n              <div>{currItem.description}</div>\n              <hr />\n              <div className=\"clearfix mb-3\">\n                <div className=\"float-left text-muted\" style={{ padding: '.375rem .75rem' }}>\n                  <svg\n                    className=\"bi bi-heart-fill\"\n                    width=\"1.2em\"\n                    height=\"1.2em\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 3.314C14.438-1.248 25.534 6.735 10 17-5.534 6.736 5.562-1.248 10 3.314z\"\n                      clipRule=\"evenodd\"\n                    ></path>\n                  </svg>\n                  {currItem.likes} likes\n                </div>\n                <div className=\"float-right\">\n                  <span className=\"d-inline-block\">Liked the Articale? Hit like button</span>\n                  <ButtonToolbar className=\"d-inline-block ml-2\">\n                    <Button\n                      variant=\"primary\"\n                      className=\"like-btn\"\n                      onClick={this.handleLikeClick}\n                    >\n                      <svg\n                        className=\"bi bi-heart-fill mr-1\"\n                        width=\"1.2em\"\n                        height=\"1.2em\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 3.314C14.438-1.248 25.534 6.735 10 17-5.534 6.736 5.562-1.248 10 3.314z\"\n                          clipRule=\"evenodd\"\n                        ></path>\n                      </svg>\n                      Like\n                    </Button>\n                  </ButtonToolbar>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              <Image src=\"/add_placeholder.png\" fluid />\n            </Col>\n          </Row>\n          {blogItems.length && (\n            <Row className=\"blogs-title-container mb-5 mt-4\">\n              <Col>\n                <h2 className=\"blogs-title-text mt-1\">Similer Articales</h2>\n              </Col>\n            </Row>\n          )}\n          {blogItems.length && (\n            <Row>\n              <Col>\n                {blogItems}\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const currItem = state.blogs.allItems.find(item => Number(item.id) === Number(ownProps.match.params.id)) || {};\n  let similarItems = [];\n  if (currItem.id) {\n    similarItems = state.blogs.allItems.filter(item => item.category === currItem.category && item.id !== currItem.id);\n  }\n  return {\n    allItems: state.blogs.allItems,\n    similarItems,\n    currItem\n  }\n};\n\nconst mapDispatchToProps = { fetchBlogs, setDisplayItemCount, setLikes };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogDetails);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from '../store';\nimport Blogs from './Blogs';\nimport BlogDetails from './BlogDetails';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <Router>\n          <Switch>\n            <Route path=\"/blog/:id\" component={BlogDetails} />\n            <Route path=\"/\" component={Blogs} />\n            </Switch>\n          </Router>\n        </PersistGate>\n      </Provider>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}