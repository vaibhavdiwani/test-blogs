{"version":3,"sources":["actions/types.js","reducers/blogReducer.js","reducers/index.js","store.js","actions/blogActions.js","components/BlogItem.js","components/Blogs.js","components/BlogDetails.js","components/App.js","index.js"],"names":["FETCH_BLOGS","SET_DISPLAY_ITEM_COUNT","SET_SORT_BY_FIELD","SET_FILTER","SET_LIKES","initialState","allItems","items","filterByAuthor","filterByCategory","sortBy","sortOrder","itemsToDisplay","likedItems","combineReducers","blogs","state","action","type","payload","sorterItems","sort","a","b","localeCompare","filteredItems","field","filterText","filter","item","toLowerCase","includes","category","author","newLikedItem","map","id","likes","push","middleware","thunk","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","persistor","persistStore","fetchBlogs","dispatch","fetch","process","then","res","json","setDisplayItemCount","count","DATE_FORMAT","BlogItem","props","Row","className","onClick","handleClick","Col","xs","Card","Body","Text","as","format","published_date","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","Title","title","Subtitle","description","Image","src","imgs","thumb","rounded","fluid","PAGE_SIZE","getSortByText","Blogs","loadMoreArticles","setSortBy","fieldOrder","handleFilterByChange","event","setState","target","name","value","setFilterBy","handleBlogClick","history","this","length","blogItems","i","Container","Navbar","expand","Brand","Collapse","Form","inline","FormControl","placeholder","onChange","Nav","NavDropdown","Item","ButtonToolbar","Button","variant","Component","mapDispatchToProps","connect","BlogDetails","handleLikeClick","currItem","setLikes","similarItems","hasLikedItems","to","style","backgroundImage","large","sm","padding","disabled","ownProps","find","Number","match","params","App","loading","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8957897e.chunk.js","sourcesContent":["const FETCH_BLOGS = 'FETCH_BLOGS';\nconst SET_DISPLAY_ITEM_COUNT = 'SET_DISPLAY_ITEM_COUNT';\nconst SET_SORT_BY_FIELD = 'SET_SORT_BY_FIELD';\nconst SET_FILTER = 'SET_FILTER';\nconst SET_LIKES = 'SET_LIKES';\nconst SET_LIKED_ITEMS = 'SET_LIKED_ITEMS';\n\nexport { FETCH_BLOGS, SET_DISPLAY_ITEM_COUNT, SET_SORT_BY_FIELD, SET_FILTER, SET_LIKES, SET_LIKED_ITEMS };","import { FETCH_BLOGS, SET_DISPLAY_ITEM_COUNT, SET_SORT_BY_FIELD, SET_FILTER, SET_LIKES, SET_LIKED_ITEMS } from '../actions/types';\n\nconst initialState = {\n  allItems: [],\n  items: [],\n  filterByAuthor: '',\n  filterByCategory: '',\n  sortBy: '',\n  sortOrder: '',\n  itemsToDisplay: 0,\n  likedItems: []\n}\n\nexport default function (state = initialState, action = {}) {\n  switch (action.type) {\n    case FETCH_BLOGS:\n      return {\n        ...state,\n        items: [...action.payload],\n        allItems: [...action.payload]\n      }\n    case SET_DISPLAY_ITEM_COUNT:\n      return {\n        ...state,\n        itemsToDisplay: action.payload\n      }\n    case SET_SORT_BY_FIELD:\n      const sorterItems = [...state.items];\n      if (action.payload.sortBy) {\n        sorterItems.sort((a, b) => {\n          if (action.payload.sortBy === 'published_date') {\n            if (action.payload.sortOrder === 'asc') {\n              return a[action.payload.sortBy] - b[action.payload.sortBy];\n            } else {\n              return b[action.payload.sortBy] - a[action.payload.sortBy];\n            }\n          } else {\n            if (action.payload.sortOrder === 'asc') {\n              return a[action.payload.sortBy].localeCompare(b[action.payload.sortBy]);\n            } else {\n              return b[action.payload.sortBy].localeCompare(a[action.payload.sortBy]);\n            }\n          }\n        });\n      }\n      return {\n        ...state,\n        items: sorterItems,\n        sortBy: action.payload.sortBy,\n        sortOrder: action.payload.sortOrder\n      }\n    case SET_FILTER:\n      let filteredItems = [...state.allItems];\n      let { filterByAuthor, filterByCategory } = state;\n      if (action.payload.field === 'author') {\n        filterByAuthor = action.payload.filterText;\n        filteredItems = filteredItems.filter((item) => {\n          return item[action.payload.field].toLowerCase().includes(action.payload.filterText.toLowerCase());\n        });\n\n        if (filterByCategory) {\n          filteredItems = filteredItems.filter((item) => {\n            return item.category.toLowerCase().includes(filterByCategory.toLowerCase());\n          });\n        }\n      } else if (action.payload.field === 'category') {\n        filterByCategory = action.payload.filterText;\n        filteredItems = filteredItems.filter((item) => {\n          return item[action.payload.field].toLowerCase().includes(action.payload.filterText.toLowerCase());\n        });\n\n        if (filterByAuthor) {\n          filteredItems = filteredItems.filter((item) => {\n            return item.author.toLowerCase().includes(filterByAuthor.toLowerCase());\n          });\n        }\n      }\n      return {\n        ...state,\n        items: filteredItems,\n        filterByAuthor,\n        filterByCategory,\n      }\n    case SET_LIKES:\n      const likedItems = [...state.likedItems];\n      let newLikedItem = false;\n      const items = [...state.items].map(item => {\n        if (action.payload.id === item.id && !likedItems.includes(action.payload.id)) {\n          item.likes = action.payload.likes;\n          newLikedItem = true;\n        }\n        return item;\n      });\n      const allItems = [...state.allItems].map(item => {\n        if (action.payload.id === item.id && !likedItems.includes(action.payload.id)) {\n          item.likes = action.payload.likes;\n          newLikedItem = true;\n        }\n        return item;\n      });\n      if (newLikedItem) {\n        likedItems.push(action.payload.id);\n      }\n\n      return {\n        ...state,\n        items,\n        allItems,\n        likedItems\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport blogReducer from './blogReducer';\n\nexport default combineReducers({\n  blogs: blogReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(\n    persistedReducer, initialState,\n    applyMiddleware(...middleware)\n);\nconst persistor = persistStore(store);\nexport default { store, persistor };","import { FETCH_BLOGS, SET_DISPLAY_ITEM_COUNT, SET_SORT_BY_FIELD, SET_FILTER, SET_LIKES, SET_LIKED_ITEMS } from './types';\n\nfunction fetchBlogs() {\n  return (dispatch) => {\n    fetch(`${process.env.PUBLIC_URL}/blogs.json`)\n      .then(res => res.json())\n      .then(blogs => dispatch({\n        type: FETCH_BLOGS,\n        payload: blogs\n      }));\n  }\n}\n\nfunction setDisplayItemCount(count) {\n  return {\n    type: SET_DISPLAY_ITEM_COUNT,\n    payload: count\n  }\n}\n\nfunction setSortBy(sortBy, sortOrder) {\n  return {\n    type: SET_SORT_BY_FIELD,\n    payload: {\n      sortBy, \n      sortOrder\n    }\n  }\n}\n\nfunction setFilterBy(field, filterText) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      field, \n      filterText\n    }    \n  }\n}\n\nfunction setLikes(id, likes) {\n  return {\n    type: SET_LIKES,\n    payload: {\n      id,\n      likes\n    }    \n  }\n}\n\nfunction setLikedItem(itemId) {\n  return {\n    type: SET_LIKED_ITEMS,\n    payload: {\n      itemId\n    }    \n  }\n}\n\nexport { fetchBlogs, setDisplayItemCount, setSortBy, setFilterBy, setLikes, setLikedItem };","import React from 'react';\nimport Moment from 'react-moment';\nimport {\n  Row,\n  Col,\n  Card,\n  Image,\n} from 'react-bootstrap';\n\nexport const DATE_FORMAT = 'DD/MM/YYYY';\n\nfunction BlogItem(props) {\n  return (\n    <Row className=\"blog-item-container mb-4\" onClick={() => props.handleClick(props.item.id)}>\n      <Col xs={8}>\n        <Card>\n          <Card.Body>\n            <Card.Text as=\"div\" className=\"clearfix\">\n              <div className=\"float-left mr-2 font-italic\">\n                <Moment format={DATE_FORMAT}>{props.item.published_date}</Moment>\n              </div>\n              <div className=\"float-left font-weight-bold\">{props.item.category}</div>\n              <div className=\"float-right text-muted\">\n                <svg\n                  className=\"bi bi-heart-fill\"\n                  width=\"1.2em\"\n                  height=\"1.2em\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 3.314C14.438-1.248 25.534 6.735 10 17-5.534 6.736 5.562-1.248 10 3.314z\"\n                    clipRule=\"evenodd\"\n                  ></path>\n                </svg>\n                {props.item.likes}\n              </div>\n            </Card.Text>\n            <Card.Title>{props.item.title}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted text-truncate\">{props.item.description}</Card.Subtitle>\n            <Card.Text as=\"div\">\n              <div>\n                <span className=\"mr-1\">By</span>\n                <span className=\"font-italic font-weight-bold\">{props.item.author}</span>\n              </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col xs={4}>\n        <Image src={props.item.imgs.thumb} rounded fluid />\n      </Col>\n    </Row>\n  );\n}\n\nexport default (BlogItem);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  ButtonToolbar,\n  Button\n} from 'react-bootstrap';\n\nimport { fetchBlogs, setDisplayItemCount, setSortBy, setFilterBy } from '../actions/blogActions';\nimport BlogItem from './BlogItem';\n\nexport const PAGE_SIZE = 4;\n\nconst getSortByText = (sortBy) => {\n  switch (sortBy) {\n    case 'author':\n      return 'Author';\n    case 'category':\n      return 'Category';\n    case 'published_date':\n      return 'Published Date';\n    default:\n      return 'Sort By'\n  }\n}\n\nclass Blogs extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: props.filterByAuthor || '',\n      category: props.filterByCategory || ''\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.allItems || !this.props.allItems.length) {\n      this.props.setDisplayItemCount(PAGE_SIZE);\n      this.props.fetchBlogs();\n    }\n  }\n\n  loadMoreArticles = () => {\n    const { itemsToDisplay } = this.props;\n    this.props.setDisplayItemCount((itemsToDisplay + PAGE_SIZE));\n  }\n\n  sortBy = (field) => {\n    const { sortBy, sortOrder } = this.props;\n    const { setDisplayItemCount, setSortBy } = this.props;\n    setDisplayItemCount(PAGE_SIZE);\n    let fieldOrder = 'asc';\n    if (sortBy === field && sortOrder === 'asc') {\n      fieldOrder = 'desc';\n    }\n    setSortBy(field, fieldOrder);\n  }\n\n  handleFilterByChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    const { setDisplayItemCount, setFilterBy } = this.props;\n    setDisplayItemCount(PAGE_SIZE);\n    setFilterBy(event.target.name, event.target.value);\n  }\n\n  handleBlogClick = id => {\n    this.props.history.push(`/blog/${id}`);\n  }\n\n  render() {\n    const { blogs, itemsToDisplay, sortBy } = this.props;\n    const blogItems = [];\n    if (blogs && blogs.length > 0) {\n      for (var i = 0; i < blogs.length; i++) {\n        blogItems.push(<BlogItem key={`blog-${i}`} item={blogs[i]} handleClick={this.handleBlogClick}/>);\n        if ((i + 1) === itemsToDisplay) {\n          break;\n        }\n      }\n    }\n    return (\n      <Container>\n        <Navbar expand=\"lg\" className=\"blogs-title-container mb-5 mt-4\">\n          <Navbar.Brand>\n            <h2 className=\"blogs-title-text\">Blogs</h2>\n          </Navbar.Brand>\n          <Navbar.Collapse className=\"show\">\n            <Form inline className=\"ml-auto\">\n              <FormControl type=\"text\"\n                placeholder=\"Filter by Author\"\n                className=\"mr-sm-2\"\n                onChange={this.handleFilterByChange}\n                name='author'\n                value={this.state.author}\n              />\n              <FormControl type=\"text\"\n                placeholder=\"Filter by Category\"\n                className=\"mr-sm-2\"\n                onChange={this.handleFilterByChange} \n                name='category'\n                value={this.state.category}\n              />\n            </Form>\n            <Nav>\n              <NavDropdown title={getSortByText(sortBy)}>\n                <NavDropdown.Item onClick={() => this.sortBy('author')}>Author</NavDropdown.Item>\n                <NavDropdown.Item onClick={() => this.sortBy('category')}>Category</NavDropdown.Item>\n                <NavDropdown.Item onClick={() => this.sortBy('published_date')}>Published Date</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Row>\n          <Col>\n            {(blogs && blogs.length > 0) ? blogItems : 'No blog found.'}\n          </Col>\n        </Row>\n        <Row className=\"mb-3\">\n          <Col>\n            {(blogs && blogs.length > 0 && itemsToDisplay < blogs.length) ? (\n              <ButtonToolbar>\n                <Button\n                  variant=\"outline-secondary\"\n                  className=\"mx-auto d-block\"\n                  onClick={this.loadMoreArticles}\n                >\n                  More Articles\n                </Button>\n              </ButtonToolbar>\n            ) : null}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  allItems: state.blogs.allItems,\n  blogs: state.blogs.items,\n  itemsToDisplay: state.blogs.itemsToDisplay,\n  sortBy: state.blogs.sortBy,\n  sortOrder: state.blogs.sortOrder,\n  filterByAuthor: state.blogs.filterByAuthor,\n  filterByCategory: state.blogs.filterByCategory,\n});\n\nconst mapDispatchToProps = { fetchBlogs, setDisplayItemCount, setSortBy, setFilterBy };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Blogs);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport {\n  Container,\n  Row,\n  Col,\n  Image,\n  ButtonToolbar,\n  Button\n} from 'react-bootstrap';\n\nimport { fetchBlogs, setDisplayItemCount, setLikes } from '../actions/blogActions';\nimport { PAGE_SIZE } from './Blogs';\nimport BlogItem, { DATE_FORMAT } from './BlogItem';\n\nclass BlogDetails extends Component {\n\n  componentDidMount() {\n    if (!this.props.allItems || !this.props.allItems.length) {\n      this.props.setDisplayItemCount(PAGE_SIZE);\n      this.props.fetchBlogs();\n    }\n  }\n\n  handleBlogClick = id => {\n    this.props.history.push(`/blog/${id}`);\n  }\n\n  handleLikeClick = () => {\n    const {id, likes} = this.props.currItem;\n    this.props.setLikes(id, (likes + 1));\n  }\n\n  render() {\n    const { currItem, similarItems, hasLikedItems } = this.props;\n    if (!currItem.id) {\n      return <Row>\n        <Col>\n          <div className=\"text-center mt-5\">\n            Article not found. Go to <Link to=\"/\">Home</Link>\n          </div>\n        </Col>\n      </Row>\n    }\n\n    const blogItems = [];\n    if (similarItems && similarItems.length > 0) {\n      for (var i = 0; i < similarItems.length; i++) {\n        blogItems.push(<BlogItem key={`blog-${i}`} item={similarItems[i]} handleClick={this.handleBlogClick} />);\n      }\n    }\n    return (\n      <div>\n        <div className=\"blog-item-image-container\" style={{ backgroundImage: `url(${currItem.imgs.large})` }}>\n          <Image src={currItem.imgs.large} fluid />\n        </div>\n        <Container>\n          <Row className=\"mt-3 mb-5\">\n            <Col xs={12} sm={9}>\n              <h4>{currItem.title}</h4>\n              <div className=\"clearfix\">\n                <div className=\"text-muted font-italic float-right\">Published on:  <Moment format={DATE_FORMAT}>{currItem.published_date}</Moment></div>\n              </div>\n              <hr />\n              <div>{currItem.description}</div>\n              <hr />\n              <div className=\"clearfix mb-3\">\n                <div className=\"float-left text-muted\" style={{ padding: '.375rem .75rem' }}>\n                  <svg\n                    className=\"bi bi-heart-fill\"\n                    width=\"1.2em\"\n                    height=\"1.2em\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 3.314C14.438-1.248 25.534 6.735 10 17-5.534 6.736 5.562-1.248 10 3.314z\"\n                      clipRule=\"evenodd\"\n                    ></path>\n                  </svg>\n                  {currItem.likes} likes\n                </div>\n                <div className=\"float-right\">\n                  <span className=\"d-inline-block\">\n                    {hasLikedItems\n                    ? (`You liked the Articale`) \n                    : (`Liked the Articale? Hit like button`)}\n                  </span>\n                  <ButtonToolbar className=\"d-inline-block ml-2\">\n                    <Button\n                      variant={hasLikedItems ? 'success' : 'primary'}\n                      className={hasLikedItems ? '' : 'like-btn'}\n                      onClick={this.handleLikeClick}\n                      disabled={hasLikedItems}\n                    >\n                      <svg\n                        className=\"bi bi-heart-fill mr-1\"\n                        width=\"1.2em\"\n                        height=\"1.2em\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 3.314C14.438-1.248 25.534 6.735 10 17-5.534 6.736 5.562-1.248 10 3.314z\"\n                          clipRule=\"evenodd\"\n                        ></path>\n                      </svg>\n                      {hasLikedItems ? 'Liked' : 'Like'}\n                    </Button>\n                  </ButtonToolbar>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              <Image src={`${process.env.PUBLIC_URL}/add_placeholder.png`} fluid />\n            </Col>\n          </Row>\n          {blogItems.length && (\n            <Row className=\"blogs-title-container mb-5 mt-4\">\n              <Col>\n                <h2 className=\"blogs-title-text mt-1\">Similer Articales</h2>\n              </Col>\n            </Row>\n          )}\n          {blogItems.length && (\n            <Row>\n              <Col>\n                {blogItems}\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const currItem = state.blogs.allItems.find(item => Number(item.id) === Number(ownProps.match.params.id)) || {};\n  let similarItems = [];\n  if (currItem.id) {\n    similarItems = state.blogs.allItems.filter(item => item.category === currItem.category && item.id !== currItem.id);\n  }\n  return {\n    allItems: state.blogs.allItems,\n    hasLikedItems: state.blogs.likedItems && state.blogs.likedItems.includes(currItem.id),\n    similarItems,\n    currItem\n  }\n};\n\nconst mapDispatchToProps = { fetchBlogs, setDisplayItemCount, setLikes };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogDetails);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from '../store';\nimport Blogs from './Blogs';\nimport BlogDetails from './BlogDetails';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store.store}>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <Router>\n          <Switch>\n            <Route path=\"/blog/:id\" component={BlogDetails} />\n            <Route path=\"/\" component={Blogs} />\n            </Switch>\n          </Router>\n        </PersistGate>\n      </Provider>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}